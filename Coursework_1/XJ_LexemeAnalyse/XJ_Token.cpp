#include"./XJ_Token.h"

namespace XJ_Token {
	std::vector<const char*> Name = {
		"【无法识别】",
		"标识符",
		"关键词",
		"运算符",
		"定界符",
		"字面量-整数(二进制)",
		"字面量-整数(八进制)",
		"字面量-整数(十进制)",
		"字面量-整数(十六进制)",
		"字面量-浮点数",
		"字面量-字符",
		"字面量-字符串",
		"字面量-字符串(无转义)",
		"字面量-字节",
		"字面量-字节串",
		"字面量-字节串(无转义)",
		"注释-普通型",
		"注释-内部型",
		"注释-外部型",
	};
	namespace FixedToken {
		//关键字：http://rust.e.lntu.edu.cn/reference/keywords.html
		std::vector<const char*> Keywords = {
			"as",
			"break",
			"const",
			"continue",
			"crate",
			"else",
			"enum",
			"extern",
			"false",
			"fn",
			"for",
			"if",
			"impl",
			"in",
			"let",
			"loop",
			"match",
			"mod",
			"move",
			"mut",
			"pub",
			"ref",
			"return",
			"self",
			"Self",
			"static",
			"struct",
			"super",
			"trait",
			"true",
			"type",
			"unsafe",
			"use",
			"where",
			"while",

			"async",
			"await",
			"dyn",

			"abstract",
			"become",
			"box",
			"do",
			"final",
			"macro",
			"override",
			"priv",
			"typeof",
			"unsized",
			"virtual",
			"yield",

			"try",

			"union",
		};

		//运算符：http://rust.e.lntu.edu.cn/reference/tokens.html#标点符号
		std::vector<const char*> Operators = {
			"+",
			"-",
			"*",
			"/",
			"%",
			"^",
			"!",
			"&",
			"|",
			"||",
			"&&",
			"<<",
			">>",
			"+=",
			"-=",
			"*=",
			"/=",
			"%=",
			"^=",
			"&=",
			"|=",
			"<<=",
			">>=",
			"=",
			"==",
			"!=",
			"<",
			">",
			"<=",
			">=",
			"@",
			//"_",
			".",
			"..",
			"...",
			"..=",
			//",",
			//";",
			":",
			"::",
			"->",
			"=>",
			"#",
			"$",
			"?",
		};

		std::vector<const char*> Delimiter = {
			"(",
			"[",
			"{",
			")",
			"]",
			"}",
			";",
			",",
		};
	};
};
